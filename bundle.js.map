{"version":3,"file":"bundle.js","sources":["../node_modules/svelte/internal/index.mjs","../node_modules/svelte/transition/index.mjs","../src/components/Chart.svelte","../src/constants/mockSimulacoes.js","../src/services/randomNumbers.js","../src/App.svelte","../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (!store || typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, callback) {\n    const unsub = store.subscribe(callback);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.ctx, definition[1](fn ? fn(ctx) : {})))\n        : ctx.$$scope.ctx;\n}\nfunction get_slot_changes(definition, ctx, changed, fn) {\n    return definition[1]\n        ? assign({}, assign(ctx.$$scope.changed || {}, definition[1](fn ? fn(changed) : {})))\n        : ctx.$$scope.changed || {};\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nlet running = false;\nfunction run_tasks() {\n    tasks.forEach(task => {\n        if (!task[0](now())) {\n            tasks.delete(task);\n            task[1]();\n        }\n    });\n    running = tasks.size > 0;\n    if (running)\n        raf(run_tasks);\n}\nfunction clear_loops() {\n    // for testing...\n    tasks.forEach(task => tasks.delete(task));\n    running = false;\n}\nfunction loop(fn) {\n    let task;\n    if (!running) {\n        running = true;\n        raf(run_tasks);\n    }\n    return {\n        promise: new Promise(fulfil => {\n            tasks.add(task = [fn, fulfil]);\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    // eslint-disable-next-line @typescript-eslint/no-object-literal-type-assertion\n    const target = {};\n    for (const k in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    for (const key in attributes) {\n        if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key in node) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            for (let j = 0; j < node.attributes.length; j += 1) {\n                const attribute = node.attributes[j];\n                if (!attributes[attribute.name])\n                    node.removeAttribute(attribute.name);\n            }\n            return nodes.splice(i, 1)[0]; // TODO strip unwanted attributes\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = current_component;\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nfunction flush() {\n    const seen_callbacks = new Set();\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (dirty_components.length) {\n            const component = dirty_components.shift();\n            set_current_component(component);\n            update(component.$$);\n        }\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                callback();\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n}\nfunction update($$) {\n    if ($$.fragment) {\n        $$.update($$.dirty);\n        run_all($$.before_update);\n        $$.fragment.p($$.dirty, $$.ctx);\n        $$.dirty = null;\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = key && { [key]: value };\n        const child_ctx = assign(assign({}, info.ctx), info.resolved);\n        const block = type && (info.current = type)(child_ctx);\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            flush();\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = { [info.value]: promise };\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, changed, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(changed, child_ctx);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction measure(blocks) {\n    const rects = {};\n    let i = blocks.length;\n    while (i--)\n        rects[blocks[i].key] = blocks[i].node.getBoundingClientRect();\n    return rects;\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args) {\n    const attributes = Object.assign({}, ...args);\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === undefined)\n            return;\n        if (value === true)\n            str += \" \" + name;\n        const escaped = String(value)\n            .replace(/\"/g, '&#34;')\n            .replace(/'/g, '&#39;');\n        str += \" \" + name + \"=\" + JSON.stringify(escaped);\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    if (component.$$.props.indexOf(name) === -1)\n        return;\n    component.$$.bound[name] = callback;\n    callback(component.$$.ctx[name]);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    if (component.$$.fragment) {\n        run_all(component.$$.on_destroy);\n        component.$$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        component.$$.on_destroy = component.$$.fragment = null;\n        component.$$.ctx = {};\n    }\n}\nfunction make_dirty(component, key) {\n    if (!component.$$.dirty) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty = blank_object();\n    }\n    component.$$.dirty[key] = true;\n}\nfunction init(component, options, instance, create_fragment, not_equal, prop_names) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const props = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props: prop_names,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty: null\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, props, (key, ret, value = ret) => {\n            if ($$.ctx && not_equal($$.ctx[key], $$.ctx[key] = value)) {\n                if ($$.bound[key])\n                    $$.bound[key](value);\n                if (ready)\n                    make_dirty(component, key);\n            }\n            return ret;\n        })\n        : props;\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    $$.fragment = create_fragment($$.ctx);\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement !== 'undefined') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, detail));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, measure, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_store, xlink_attr };\n","import { cubicInOut, cubicOut } from '../easing';\nimport { is_function, assign } from '../internal';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400 }) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut }) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `overflow: hidden;` +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 }) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut }) {\n    const len = node.getTotalLength();\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","\r\n\r\n\r\n<script>\r\nimport { afterUpdate } from 'svelte';\r\nexport let data;\r\nexport let numeroDeIteracoes;\r\nexport let titulo;\r\nexport let backgroundColor;\r\nlet canvas;\r\n\r\nfunction createChart(){\r\n  var chartTMNF = new Chart(canvas, {\r\n      type: 'line',\r\n      data: {\r\n          labels: [...new Array(numeroDeIteracoes).fill(0).map((it,i) => ++i)],\r\n          datasets: [{\r\n              label: titulo,\r\n              data,\r\n              backgroundColor,\r\n              borderWidth: 1\r\n          }]\r\n      }\r\n  });\r\n}\r\n\r\nafterUpdate( () => {\r\n  createChart()\r\n}) \r\n\r\n</script>\r\n\r\n<canvas id=\"chartTMNF\" bind:this={canvas} width=\"400\" height=\"400\"></canvas>\r\n\r\n","\r\nexport const SIMULATION_EXAMPLE = {\r\n  tempoTotalDeSimulacao: 240,\r\n  temposDeTodosOsServicos: [ 11.5, 12.6, 12.0, 11.5, 12, 10.4, 11.5, 13.1, 10.4, 11.5, 11.5, 9.8, 10.9, 11.5, 10.4],\r\n  temposEntreTodasChegadas: [ 17.5, 7.5, 12.5, 2.5, 2.5, 2.5, 2.5, 37.5, 17.5, 17.5, 32.5, 37.5, 7.5, 12.5, 12.5],\r\n  numeroDeServicos: 15\r\n}","\r\n// Uso da biblioteca que o higão indicou, vai ter que usar ela pra gerar o tempo entre chegada e o tempo de serviçõ, \r\nexport const generateRandom = () => {\r\n\r\n  // var stream1 = new Random(1234);\r\n  // return  stream1.random().exponential(2)\r\n}\r\n\r\n\r\n\r\nconst getNormalGenerator = function() {\r\n\r\n  return (function() {\r\n\r\n      var oldMu, oldSigma;\r\n      var x2, multiplier, genReady;\r\n\r\n      return function normal(mu, sigma) {\r\n\r\n          var x1, u1, u2, v1, v2, s;\r\n\r\n          if ('number' !== typeof mu) {\r\n              throw new TypeError('nextNormal: mu must be number.');\r\n          }\r\n          if ('number' !== typeof sigma) {\r\n              throw new TypeError('nextNormal: sigma must be number.');\r\n          }\r\n\r\n          if (mu !== oldMu || sigma !== oldSigma) {\r\n              genReady = false;\r\n              oldMu = mu;\r\n              oldSigma = sigma;\r\n          }\r\n\r\n          if (genReady) {\r\n              genReady = false;\r\n              return (sigma * x2) + mu;\r\n          }\r\n\r\n          u1 = Math.random();\r\n          u2 = Math.random();\r\n\r\n          v1 = (2 * u1) - 1;\r\n          v2 = (2 * u2) - 1;\r\n\r\n          s = (v1 * v1) + (v2 * v2);\r\n\r\n\r\n          if (s >= 1) {\r\n              return normal(mu, sigma);\r\n          }\r\n\r\n          multiplier = Math.sqrt(-2 * Math.log(s) / s);\r\n\r\n          x1 = v1 * multiplier;\r\n          x2 = v2 * multiplier;\r\n\r\n          genReady = true;\r\n\r\n          return (sigma * x1) + mu;\r\n\r\n      };\r\n  })();\r\n};\r\n\r\n\r\n\r\nexport const nextExponential = function(lambda) {\r\n  if (typeof lambda !== 'number') \r\n      throw new TypeError('nextExponential: lambda must be number.')\r\n  \r\n  if (lambda <= 0)\r\n      throw new TypeError('nextExponential: ' + 'lambda must be greater than 0.');\r\n  \r\n  return - Math.log(1 - Math.random()) / lambda;\r\n};\r\n\r\n// for(let i = 0; i<30; i++){\r\n//   console.log(nextExponential(0.4) * 3)\r\n// }\r\n\r\n\r\n\r\n export const nextNormal = getNormalGenerator();","<script>\n  import { fade } from 'svelte/transition';\n  import Header from './components/Header.svelte';\n  import Footer from './components/Footer.svelte';\n  import ChartSimulacao from './components/Chart.svelte'; //chart tempo Medio na fila\n  import {SIMULATION_EXAMPLE} from './constants/mockSimulacoes.js';\n  import {generateRandom, nextExponential, nextNormal} from './services/randomNumbers.js';\n\n\n  //VARIAVEIS DO SISTEMA\n  let numeroDeClientesAcumulados = 1;\n  let tempoAtualDaSimulação = 0;\n  let tempoTotalDeSimulacao = 0;\n  let temposEntreTodasChegadas = [];\n  let temposDeTodosOsServicos = [];\n  let numeroDeServicos = 15;\n  let servicos = [];\n\n\n\n  // VARIAVEIS PARA GERAÇÃO DINAMICA DOS GRAFICOS\n  let listaDeTemposMediosNafila = []\n  let listaDeTemposMediosDeServico = []\n  let listaDeProbabilidadesDeOperadoresLivre = []\n  let listaDeProbDeClienteEsperarNaFila = []\n  let listaDeTemposMediosDespendidoNoSistema = []\n  \n  \n  \n\n  $: ultimoServico = () => servicos[servicos.length - 1];\n\n\n  // FUNÇÕES PARA GERAÇÃO DINAMICA DO RELATORIO (GRAFICOS E INFORMAÇÕES)\n  $: tempoMedioDeServicos = () => {\n    let numeroTotalDeClientes = numeroDeClientesAcumulados\n    let listaDeTemposDeServicos = servicos.map( item => item.tempoServico);\n    let tempoTotalDeServicos = listaDeTemposDeServicos.reduce((acc, atual) => acc += atual);\n    return tempoTotalDeServicos / numeroTotalDeClientes;\n  }\n\n  $: tempoMedioDeEsperaNaFila = () => {\n    let numeroTotalDeClientes = numeroDeClientesAcumulados\n    let listaDeTemposDeEspera = servicos.map( item => item.tempoClienteNaFila);\n    let tempoDeEsperaTotal = listaDeTemposDeEspera.reduce((acc, atual) => acc += atual);\n    return tempoDeEsperaTotal / numeroDeClientesAcumulados;\n  }\n\n  $: probabilidadeDeEspera = () => {\n    let numeroTotalDeClientes = numeroDeClientesAcumulados\n    let listaDeEsperasPelosClientes= servicos.map(servico => servico.tempoClienteNaFila);\n    let numeroDeClientesQueEsperaram = listaDeEsperasPelosClientes.filter( tempo => tempo > 0 && tempo !== undefined).length;\n    return numeroDeClientesQueEsperaram / numeroTotalDeClientes;\n  }\n\n  $: probabilidadeDeOperadorLivre = () => {\n    let listaDeTemposLivresDosOperadores= servicos.map(servico => servico.tempoLivreDoOperador);\n    let totalDeTempoLivreDosOperadores = listaDeTemposLivresDosOperadores.reduce((acc, atual) => acc += atual);\n    return totalDeTempoLivreDosOperadores / tempoTotalDeSimulacao;\n  }\n  \n  $: tempoMedioDespendidoNoSistema = () => {\n    let numeroTotalDeClientes = numeroDeClientesAcumulados\n    let listaDeTemposNoSistema= servicos.map(servico => servico.tempoClienteNoSistema);\n    let totalDeTemposNoSistema = listaDeTemposNoSistema.reduce((acc, atual) => acc += atual);\n    return totalDeTemposNoSistema / numeroTotalDeClientes;\n  }\n\n  const alimentarDadosDosGraficos = () => {\n    listaDeTemposMediosNafila = [...listaDeTemposMediosNafila, tempoMedioDeEsperaNaFila() ]\n    listaDeTemposMediosDeServico = [...listaDeTemposMediosDeServico, tempoMedioDeServicos() ]\n    listaDeProbabilidadesDeOperadoresLivre = [...listaDeProbabilidadesDeOperadoresLivre, probabilidadeDeOperadorLivre() ]\n    listaDeProbDeClienteEsperarNaFila = [...listaDeProbDeClienteEsperarNaFila, probabilidadeDeEspera() ]\n    listaDeTemposMediosDespendidoNoSistema = [...listaDeTemposMediosDespendidoNoSistema, tempoMedioDespendidoNoSistema() ]\n  }\n\n\n  // FUNÇÕES DA SIMULAÇÃO\n  const gerarNaoPrimeiroServico = (NTDUC, NTSNR) => {\n    const novoCliente = numeroDeClientesAcumulados + 1;\n    const novoTempoDesdeUltimaChegada = NTDUC; //Essa parte preciso gerar aleatorio mais pra frente\n    const novoTempoChegadaNoRelogio = ultimoServico().tempoChegadaNoRelogio + novoTempoDesdeUltimaChegada;\n    const novoTempoDeServico = NTSNR; // Essa parte depois vai precisar gerar aleatorio tambem\n\n    const novoTempoInicioServicoNoRelogio = () => {\n      const tempoDoUltimoServicoJaConcluido = ultimoServico().tempoFinalDoServicoNoRelogio;\n      if (tempoDoUltimoServicoJaConcluido > novoTempoChegadaNoRelogio)\n        return tempoDoUltimoServicoJaConcluido\n      else\n         return novoTempoChegadaNoRelogio\n    }\n  \n    const novoTempoClienteNaFila = () => {\n      const diferencaEntreTempos = ultimoServico().tempoFinalDoServicoNoRelogio - novoTempoChegadaNoRelogio;\n      if (diferencaEntreTempos > 0)\n        return diferencaEntreTempos\n      else\n        return 0\n    }\n\n    const novoTempoFinalDoServicoNoRelogio = novoTempoDeServico + novoTempoInicioServicoNoRelogio();\n    const novoTempoClienteNoSistema = novoTempoDeServico + novoTempoClienteNaFila();\n    const novoTempoLivreDoOperador =  novoTempoInicioServicoNoRelogio() - ultimoServico().tempoFinalDoServicoNoRelogio;\n\n    const novoServico = {\n      cliente: novoCliente,\n\t\t\ttempoDesdeUltimaChegada: novoTempoDesdeUltimaChegada,\n\t\t\ttempoChegadaNoRelogio: novoTempoChegadaNoRelogio,\n\t\t\ttempoServico: novoTempoDeServico,\n\t\t\ttempoInicioServicoNoRelogio: novoTempoInicioServicoNoRelogio(),\n\t\t\ttempoClienteNaFila: novoTempoClienteNaFila(),\n\t\t\ttempoFinalDoServicoNoRelogio: novoTempoFinalDoServicoNoRelogio,\n\t\t\ttempoClienteNoSistema: novoTempoClienteNoSistema,\n\t\t\ttempoLivreDoOperador: novoTempoLivreDoOperador\n    };\n\n    numeroDeClientesAcumulados = numeroDeClientesAcumulados + 1;\n\n    return novoServico;\n\n  }\n\n  const gerarPrimeiroServico = (NTDUC, NTSNR) => {\n\n    const novoTempoFinalDoServicoNoRelogio = NTDUC + NTSNR;\n    const novoTempoClienteNoSistema = NTSNR ;\n\n    const novoServico = {\n      cliente: 1,\n\t\t\ttempoDesdeUltimaChegada: NTDUC,\n\t\t\ttempoChegadaNoRelogio: NTDUC,\n\t\t\ttempoServico: NTSNR,\n\t\t\ttempoInicioServicoNoRelogio: NTDUC,\n\t\t\ttempoClienteNaFila: 0,\n\t\t\ttempoFinalDoServicoNoRelogio: novoTempoFinalDoServicoNoRelogio,\n\t\t\ttempoClienteNoSistema: novoTempoClienteNoSistema,\n\t\t\ttempoLivreDoOperador: NTDUC\n    };\n\n    return novoServico;\n  }\n\n  const gerarServico = (NTDUC, NTSNR) => {\n    let novoServico;\n\n    let naoEhPrimeiroServico = servicos.length != 0\n    \n    if(naoEhPrimeiroServico)\n      novoServico = gerarNaoPrimeiroServico(NTDUC, NTSNR);\n    else\n      novoServico = gerarPrimeiroServico(NTDUC, NTSNR);\n\n    return novoServico\n  }\n\n  \n//  let tecOpcoes = [\n// \t\t{ id: 1, text: `Determinístico` },\n// \t\t{ id: 2, text: `Aleatório Exponencial` }\n//   ];\n\n//   let tsOpcoes = [\n// \t\t{ id: 1, text: `Determinístico` },\n// \t\t{ id: 2, text: `Aleatório Exponencial` }\n//   ];\n\n\n  const gerarTEC = () => {\n    if (tecSelecionado.id === 1){\n      temposEntreTodasChegadas = [...temposEntreTodasChegadas, inputTEC]\n    }\n\n    if(tecSelecionado.id === 2){\n      let novoTEC = nextExponential(inputLambdaTEC);\n      temposEntreTodasChegadas = [...temposEntreTodasChegadas, novoTEC]\n    }\n  }\n\n  const gerarTS = () => {\n    if (tsSelecionado.id === 1){\n      temposDeTodosOsServicos = [...temposDeTodosOsServicos, inputTS]\n    }\n\n    if(tsSelecionado.id === 2){\n      let novoTS = nextExponential(inputLambdaTS);\n      temposDeTodosOsServicos = [...temposDeTodosOsServicos, novoTS]\n    }\n  }\n\n\n  const simularProblema = () => {\n    var i = 0;\n\n    while (tempoAtualDaSimulação < tempoTotalDeSimulacao ){\n      gerarTEC()\n      gerarTS()\n      \n      let novoServico = gerarServico(temposEntreTodasChegadas[i], temposDeTodosOsServicos[i] );\n      servicos = [...servicos, novoServico];\n      tempoAtualDaSimulação = tempoAtualDaSimulação + novoServico.tempoDesdeUltimaChegada;\n      i++;\n      alimentarDadosDosGraficos();\n      console.log(tempoAtualDaSimulação)\n    }\n\n  }\n\n  // FUNÇÕES DISPARADAS PELOS BOTÕES\n\tconst handleSubmit = (event) => {\n    event.preventDefault();\n    simularProblema();\n\n  }\n\n  const resetSimulation = () => {\n    numeroDeClientesAcumulados = 1;\n    tempoAtualDaSimulação = 0;\n    tempoTotalDeSimulacao = 0;\n    temposEntreTodasChegadas = [];\n    temposDeTodosOsServicos = [];\n    servicos = []\n\n    listaDeTemposMediosNafila = []\n    listaDeTemposMediosDeServico = []\n    listaDeProbabilidadesDeOperadoresLivre = []\n    listaDeProbDeClienteEsperarNaFila = []\n    listaDeTemposMediosDespendidoNoSistema = []\n  }\n\n  const handleSimularSlideClick = () => {\n      resetSimulation()\n      \n      numeroDeServicos = SIMULATION_EXAMPLE.numeroDeServicos;\n      tempoTotalDeSimulacao = SIMULATION_EXAMPLE.tempoTotalDeSimulacao;\n      \n\n      for(let i = 0; i < numeroDeServicos; i++ ){\n        setTimeout(() => {\n          let novoServico = gerarServico(SIMULATION_EXAMPLE.temposEntreTodasChegadas[i],SIMULATION_EXAMPLE.temposDeTodosOsServicos[i])\n          servicos = [...servicos, novoServico];\n          alimentarDadosDosGraficos()\n        },1000 * i)\n      }\n  }\n\n\n  // CONTROLE FORMULÁRIO\n  let tecOpcoes = [\n\t\t{ id: 1, text: `Determinístico` },\n\t\t{ id: 2, text: `Aleatório Exponencial` }\n  ];\n\n  let tsOpcoes = [\n\t\t{ id: 1, text: `Determinístico` },\n\t\t{ id: 2, text: `Aleatório Exponencial` }\n  ];\n\n  let tecSelecionado = \"\";\n  let tsSelecionado = \"\";\n\n  let inputTS = \"\";\n  let inputTEC = \"\";\n\n  let inputLambdaTEC = \"\";\n  let inputLambdaTS = \"\";\n\n \n\n\n</script>\n\n<style>\n  :global(*,*::after,*::before) {\n    padding: 0;\n    margin: 0;\n  }\n\n  @media print {\n    header, footer, form, .btn-imprimir{\n      display: none;\n      visibility: hidden;\n    }\n  }\n\n\n\t\n\tmain{\n\t\tmargin-top:2rem;\n\t\tmax-width: 1400px;\n\t\tmargin: 0 auto;\n\t\tpadding: 1rem;\n\t}\n\n  form{\n    background-color: #fdfdfd;\n    padding:10px;\n  }\n</style>\n\n\n\n<Header/>\n\n<form class=\"container my-5\" on:submit={handleSubmit}>\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-4 offset-md-2\">\n      <label for=\"inputTS\">Tempo da simulação</label>\n      <input required bind:value={tempoTotalDeSimulacao} type=\"number\" min=\"1\" max=\"9999\" class=\"form-control\" id=\"inputTS\" placeholder=\"tempo da simulação\">\n    </div>\n  </div>\n  \n  <!-- Tempo entre chegadas -->\n   <div class=\"form-row\">\n    <div class=\"form-group col-md-4 offset-md-2\">\n      <label for=\"inputTEC\">Tempo entre chegadas</label>\n      <select required class=\"form-control\" value={tecSelecionado} id=\"inputTEC\"  bind:value={tecSelecionado}>\n        <option value={0}>\n          Selecione alguma...\n        </option>\n        {#each tecOpcoes as option}\n          <option value={option}>\n            {option.text}\n          </option>\n        {/each}\n      </select>\n    </div>\n\n  {#if tecSelecionado.id === 1 }\n     <div in:fade  class=\"form-group col-md-4\">\n      <label for=\"inputTEC\">Qual o tempo entre as chegadas?</label>\n      <input type=\"number\" bind:value={inputTEC} class=\"form-control\" id=\"inputTEC\" min=\"1\" max=\"999\" placeholder=\"tempo em minutos\">\n    </div>\n  {:else if tecSelecionado.id === 2}\n    <div in:fade class=\"form-group col-md-2\">\n      <label for=\"inputLambdaExponencial\">Valor do Lambda</label>\n      <input type=\"number\" step=\"0.01\" bind:value={inputLambdaTEC} class=\"form-control\" id=\"inputLambdaExponencial\" placeholder=\"\">\n    </div>\n  {/if}\n\n  </div>\n\n \n  <!-- Tempo de serviços -->\n  <div class=\"form-row\">\n    <div class=\"form-group col-md-4 offset-md-2\">\n      <label for=\"inputTS\">Tempo dos serviços</label>\n      <select required class=\"form-control\" value={tsSelecionado} id=\"inputTS\"  bind:value={tsSelecionado}>\n        <option value={0}>\n          Selecione alguma...\n        </option>\n        {#each tsOpcoes as option}\n          <option value={option}>\n            {option.text}\n          </option>\n        {/each}\n      </select>\n    </div>\n\n  {#if tsSelecionado.id === 1 }\n     <div in:fade  class=\"form-group col-md-4\">\n      <label for=\"inputNumeroDeServicos\">Quantos minutos o serviço demora?</label>\n      <input type=\"number\" bind:value={inputTS} class=\"form-control\" id=\"inputNumeroDeServicos\" min=\"1\" max=\"999\" placeholder=\"tempo em minutos\">\n    </div>\n  {:else if tsSelecionado.id === 2}\n    <div in:fade class=\"form-group col-md-2\">\n      <label for=\"inputNumeroDeServicos\">Valor do Lambda</label>\n      <input type=\"number\" step=\"0.01\" class=\"form-control\" bind:value={inputLambdaTS} id=\"inputNumeroDeServicos\" placeholder=\"\">\n    </div>\n  {/if}\n\n  </div>\n  \n  <div class=\"offset-md-2\">\n    <input type=\"submit\" value=\"Simular\" class=\"btn btn-large btn-primary\">\n\n      <button class=\"btn btn-large btn-danger float-right\" on:click|preventDefault={handleSimularSlideClick}> Simular Exemplo Slide</button>\n  </div>\n  \n  \n</form>\n\n<hr>\n\n<div class=\"container\">\n  <div class=\"d-flex justify-content-end text-right\">\n    <button class=\"btn-imprimir btn btn-secondary\" on:click=\"{() => window.print()}\">Imprimir</button>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col-md-4\">\n      <ChartSimulacao  data={listaDeTemposMediosNafila} backgroundColor='#EF5B5B' numeroDeIteracoes={numeroDeServicos || 30} titulo=\"Tempo médio na fila de espera\" />\n    </div>\n\n    <div class=\"col-md-4\">\n      <ChartSimulacao  data={listaDeTemposMediosDeServico} backgroundColor='#BAA5FF' numeroDeIteracoes={numeroDeServicos || 30} titulo=\"Tempo médio de serviço\" />\n    </div>\n\n    <div class=\"col-md-4\">\n      {#if servicos.length != 0}\n        <div transition:fade=\"{{duration:1000}}\" class=\"pt-4\">\n          <p>Número total de clientes: <span class=\"bg-primary p-1 text-light rounded\">{numeroDeClientesAcumulados}</span></p>\n          <p>Tempo médio de espera na fila: <span class=\"bg-primary p-1 text-light rounded\">{ tempoMedioDeEsperaNaFila().toFixed(2)}</span></p>\n          <p>Probabilidade de um cliente esperar na fila: <span class=\"bg-primary p-1 text-light rounded\">{probabilidadeDeEspera().toFixed(2)}</span></p>\n          <p>Probabilidade do operador livre: <span class=\"bg-primary p-1 text-light rounded\">{probabilidadeDeOperadorLivre().toFixed(2)}</span></p>\n          <p>Tempo médio de serviço: <span class=\"bg-primary p-1 text-light rounded\">{tempoMedioDeServicos().toFixed(2)}</span></p>\n          <p>Tempo médio despendido no sistema: <span class=\"bg-primary p-1 text-light rounded\">{tempoMedioDespendidoNoSistema().toFixed(2)}</span></p>\n        </div>\n      {/if}\n    </div>\n\n  </div>\n\n  <div class=\"row\">\n   <div class=\"col-md-4\">\n      <ChartSimulacao  data={listaDeProbabilidadesDeOperadoresLivre} backgroundColor='#466365' numeroDeIteracoes={numeroDeServicos || 30} titulo=\"Probabilidade de operador livre\" />\n    </div>\n\n    <div class=\"col-md-4\">\n      <ChartSimulacao  data={listaDeProbDeClienteEsperarNaFila} backgroundColor='#ABFAA9' numeroDeIteracoes={numeroDeServicos || 30} titulo=\"Probabilidade do cliente esperar\" />\n    </div>\n\n     <div class=\"col-md-4\">\n      <ChartSimulacao  data={listaDeTemposMediosDespendidoNoSistema} backgroundColor='#C6B9CD' numeroDeIteracoes={numeroDeServicos || 30} titulo=\"Tempos Médios despendido no sistema\" />\n    </div>\n  </div>\n\n</div>\n\n<hr>\n\n<main>\n  <table class=\"table table-striped table-hover my-4\">\n    <thead class=\"bg-secondary text-light\">\n      <tr>\n        <th scope=\"col\">Cliente</th>\n        <th scope=\"col\">Tempo desde ultima chegada</th>\n        <th scope=\"col\">Tempo de chegada no relogio</th>\n        <th scope=\"col\">Tempo de serviço</th>\n        <th scope=\"col\">Tempo de início do serviço no relógio</th>\n        <th scope=\"col\">Tempo de cliente na fila</th>\n        <th scope=\"col\">Tempo final do serviço no relógio</th>\n        <th scope=\"col\">Tempo do cliente no sistema</th>\n        <th scope=\"col\">Tempo livre do operador</th>\n      </tr>\n    </thead>\n    <tbody>\n      {#if servicos.length != 0}\n        {#each servicos as servico}\n          <tr transition:fade=\"{{duration: 1000, delay: 400}}\">\n            <th scope=\"row\">{servico.cliente}</th>\n            <td>{servico.tempoDesdeUltimaChegada.toFixed(2)}</td>\n            <td>{servico.tempoChegadaNoRelogio.toFixed(2)}</td>\n            <td>{servico.tempoServico.toFixed(2)}</td>\n            <td>{servico.tempoInicioServicoNoRelogio.toFixed(2)}</td>\n            <td>{servico.tempoClienteNaFila.toFixed(2)}</td>\n            <td>{servico.tempoFinalDoServicoNoRelogio.toFixed(2)}</td>\n            <td>{servico.tempoClienteNoSistema.toFixed(2)}</td>\n            <td>{servico.tempoLivreDoOperador.toFixed(2)}</td>\n          </tr>\n\n        {/each}\n      {/if}\n    </tbody>\n  </table>\n\n\n</main>\n\n<Footer/>\n\n\n\n\n\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'world'\n\t}\n});\n\nexport default app;"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","stylesheet","running","run_tasks","task","delete","size","loop","promise","Promise","fulfil","add","[object Object]","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","setAttribute","to_number","undefined","set_data","set_input_value","input","select_option","select","option","__value","selected","select_value","selected_option","querySelector","current_component","active","current_rules","create_rule","duration","delay","ease","uid","step","keyframes","p","t","rule","str","hash","charCodeAt","style","head","sheet","insertRule","cssRules","animation","delete_rule","split","filter","anim","indexOf","join","deleteRule","set_current_component","component","afterUpdate","Error","get_current_component","$$","after_update","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","flush","seen_callbacks","shift","update","pop","callback","has","fragment","dirty","before_update","ctx","wait","then","dispatch","direction","kind","dispatchEvent","type","detail","e","createEvent","initCustomEvent","custom_event","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","transition_out","o","null_transition","create_in_transition","params","animation_name","config","cleanup","go","easing","tick","css","start_time","end_time","abort","started","create_bidirectional_transition","intro","running_program","pending_program","clear_animation","init","program","Math","abs","start","end","group","mount_component","on_mount","on_destroy","m","new_on_destroy","map","destroy_component","make_dirty","key","instance","create_fragment","not_equal","prop_names","parent_component","props","bound","context","Map","callbacks","ready","ret","hydrate","l","Array","from","childNodes","SvelteComponent","this","$destroy","index","splice","fade","getComputedStyle","opacity","canvas","numeroDeIteracoes","titulo","backgroundColor","Chart","labels","fill","it","datasets","label","borderWidth","SIMULATION_EXAMPLE","tempoTotalDeSimulacao","temposDeTodosOsServicos","temposEntreTodasChegadas","numeroDeServicos","nextExponential","lambda","TypeError","log","random","inputLambdaTEC","inputTEC","inputLambdaTS","inputTS","tempoMedioDeEsperaNaFila","toFixed","probabilidadeDeEspera","probabilidadeDeOperadorLivre","tempoMedioDeServicos","tempoMedioDespendidoNoSistema","numeroDeClientesAcumulados","servicos","servico","cliente","tempoDesdeUltimaChegada","tempoChegadaNoRelogio","tempoServico","tempoInicioServicoNoRelogio","tempoClienteNaFila","tempoFinalDoServicoNoRelogio","tempoClienteNoSistema","tempoLivreDoOperador","tecOpcoes","tecSelecionado","id","tsOpcoes","tsSelecionado","listaDeTemposMediosNafila","listaDeTemposMediosDeServico","listaDeProbabilidadesDeOperadoresLivre","listaDeProbDeClienteEsperarNaFila","listaDeTemposMediosDespendidoNoSistema","handleSimularSlideClick","preventDefault","call","handleSubmit","click_handler","tempoAtualDaSimulação","alimentarDadosDosGraficos","gerarServico","NTDUC","NTSNR","novoServico","novoCliente","novoTempoDesdeUltimaChegada","novoTempoChegadaNoRelogio","ultimoServico","novoTempoDeServico","novoTempoInicioServicoNoRelogio","tempoDoUltimoServicoJaConcluido","novoTempoClienteNaFila","diferencaEntreTempos","novoTempoFinalDoServicoNoRelogio","novoTempoClienteNoSistema","novoTempoLivreDoOperador","gerarNaoPrimeiroServico","gerarPrimeiroServico","gerarTEC","novoTEC","gerarTS","novoTS","numeroTotalDeClientes","item","reduce","acc","atual","tempo","console","simularProblema","setTimeout","body"],"mappings":"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"}